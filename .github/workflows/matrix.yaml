name: matrix
on:
  #schedule: [ cron: '0 5 * * *' ] # every day at 5am UTC
  workflow_dispatch:

permissions:
  packages: write # to write to ghcr.io
  contents: write # to commit to the repo

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_VERSION: "1018"

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.setver.outputs.version_tag }}
    steps:
      - name: Calculate version tag
        id: setver
        run: |
          echo "version_tag=${{ env.IMAGE_VERSION }}-$(date +'%Y%m%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Create GitHub Release ${{ steps.setver.outputs.version_tag }}
        run: |
          gh release create "${{ steps.setver.outputs.version_tag }}" --title "Release ${{ steps.setver.outputs.version_tag }}" --notes "Images Release"

  build:
    needs: prepare-release
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include:
          # apt debian/ubuntu stuff
          - { id: "ubuntu-cloud-k8s-nvidia-baremetal", env: { }, runner: "ubuntu-latest" }
          # EL rocky/fedora stuff
          - { id: "ka-rocky-cloud-k8s-el-containerd-qemu", env: { }, runner: "ubuntu-latest" } # k8s amd64
          # arm64 with recent containerd
          - { id: "ka-rocky-noncloud-k8s-el-containerd-qemu", env: { }, runner: "ubuntu-24.04-arm" }
          - { id: "ka-rocky-cloud-k8s-el-containerd-qemu", env: { }, runner: "ubuntu-24.04-arm" } # k8s arm64
    name: "${{ matrix.id }}"
    runs-on: "${{ matrix.runner }}"
    steps:
      - name: cleanup GHA hosted runner
        run: |
          # Workaround to provide additional free space for building.
          #   https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout build repo
        uses: actions/checkout@v4

      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: GitHub Actions Cache for 'cache' dir
        uses: actions/cache@v4
        with:
          path: cache
          key: "mkosi-cache-${{matrix.runner}}-${{matrix.id}}"
          restore-keys: |
            mkosi-cache-${{matrix.runner}}-${{matrix.id}}
            mkosi-cache-${{matrix.runner}}
          save-always: true # always save the cache, even if build fails

      - name: Build image ${{matrix.id}}
        id: buildimage
        env: ${{ matrix.env }} # this gets combined with the job-wide env's
        run: |
          bash fatso.sh "${{ matrix.id }}" korok

      - name: Upload to GH Release ${{ needs.prepare-release.outputs.version_tag }}
        # --clobber to overwrite existing files
        run: |
          set -x
          if compgen -G "dist/*" > /dev/null; then
            gh release upload "${{ needs.prepare-release.outputs.version_tag }}" dist/* 
          fi
